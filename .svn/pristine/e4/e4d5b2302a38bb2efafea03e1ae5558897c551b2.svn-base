module Main where

import Data.Char (isDigit)
import System.Environment
import Text.Read
import Data.Maybe
    
avanca :: [String] -> Int -> [String]
avanca m t = avancaAux (length head m) m t

avancaAux :: Int -> [String] -> Int -> [String]
avancaAux
avancaAux d m t | t <= (d-2)^2 = blocos d m t (1,1)

blocos :: Int -> [String] -> Int -> (Int,Int) -> [String]
blocos d m t (x,y) = replaceM  (x,y) (1,1) m blocos d m 


replace (x,y) (p1,p2) (h:ts) | x == p1 && y == p2 

main :: IO ()
main = do
    a <- getArgs
    let ticks = readMaybe (a !! 0)
    w <- getContents
    if isJust ticks
        then putStr $ unlines $ avanca (lines w) (fromJust ticks)
        else putStrLn "Parâmetros inválidos"
